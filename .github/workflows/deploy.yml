name: Deploy to docs.opencloud.dev

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    # Run every day at 2 AM UTC to fetch latest docs
    - cron: '0 2 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  collect-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'


      - name: Fetch organization README for homepage
        run: |
          # Get the organization profile README
          curl -s https://raw.githubusercontent.com/open-service-portal/.github/main/profile/README.md > src/pages/organization-readme.md
          
          # Add frontmatter for Docusaurus page
          echo "---" > src/pages/index.md
          echo "title: Welcome to Open Service Portal" >> src/pages/index.md
          echo "hide_table_of_contents: true" >> src/pages/index.md
          echo "---" >> src/pages/index.md
          echo "" >> src/pages/index.md
          cat src/pages/organization-readme.md >> src/pages/index.md
          rm src/pages/organization-readme.md

      - name: Create external docs directories
        run: |
          mkdir -p external-docs/portal-workspace
          mkdir -p external-docs/app-portal
          mkdir -p external-docs/catalog
          mkdir -p external-docs/templates

      - name: Clone and copy portal-workspace docs
        run: |
          git clone https://github.com/open-service-portal/portal-workspace.git temp-portal-workspace
          if [ -d "temp-portal-workspace/docs" ]; then
            cp -r temp-portal-workspace/docs/* external-docs/portal-workspace/ 2>/dev/null || true
          fi
          if [ -f "temp-portal-workspace/README.md" ]; then
            cp temp-portal-workspace/README.md external-docs/portal-workspace/index.md
          else
            echo "# Portal Workspace" > external-docs/portal-workspace/index.md
            echo "Documentation coming soon." >> external-docs/portal-workspace/index.md
          fi

          # Add custom_edit_url to index.md (README.md)
          if [ -f "external-docs/portal-workspace/index.md" ]; then
            echo "---" > temp-index.md
            echo "custom_edit_url: https://github.com/open-service-portal/portal-workspace/edit/main/README.md" >> temp-index.md
            echo "---" >> temp-index.md
            echo "" >> temp-index.md
            cat external-docs/portal-workspace/index.md >> temp-index.md
            mv temp-index.md external-docs/portal-workspace/index.md
          fi

          # Add custom_edit_url to all docs/* files
          find external-docs/portal-workspace -name "*.md" ! -name "index.md" -type f | while read file; do
            relpath=${file#external-docs/portal-workspace/}
            echo "---" > temp.md
            echo "custom_edit_url: https://github.com/open-service-portal/portal-workspace/edit/main/docs/$relpath" >> temp.md
            echo "---" >> temp.md
            echo "" >> temp.md
            cat "$file" >> temp.md
            mv temp.md "$file"
          done

          rm -rf temp-portal-workspace

      - name: Clone and copy app-portal docs
        run: |
          git clone https://github.com/open-service-portal/app-portal.git temp-app-portal
          if [ -d "temp-app-portal/docs" ]; then
            cp -r temp-app-portal/docs/* external-docs/app-portal/ 2>/dev/null || true
          fi
          if [ -f "temp-app-portal/README.md" ]; then
            cp temp-app-portal/README.md external-docs/app-portal/index.md
          else
            echo "# App Portal" > external-docs/app-portal/index.md
            echo "Backstage application documentation." >> external-docs/app-portal/index.md
          fi
          if [ -f "temp-app-portal/CLAUDE.md" ]; then
            cp temp-app-portal/CLAUDE.md external-docs/app-portal/claude.md
          fi

          # Add custom_edit_url to index.md (README.md)
          if [ -f "external-docs/app-portal/index.md" ]; then
            echo "---" > temp-index.md
            echo "custom_edit_url: https://github.com/open-service-portal/app-portal/edit/main/README.md" >> temp-index.md
            echo "---" >> temp-index.md
            echo "" >> temp-index.md
            cat external-docs/app-portal/index.md >> temp-index.md
            mv temp-index.md external-docs/app-portal/index.md
          fi

          # Add custom_edit_url to claude.md
          if [ -f "external-docs/app-portal/claude.md" ]; then
            echo "---" > temp-claude.md
            echo "custom_edit_url: https://github.com/open-service-portal/app-portal/edit/main/CLAUDE.md" >> temp-claude.md
            echo "---" >> temp-claude.md
            echo "" >> temp-claude.md
            cat external-docs/app-portal/claude.md >> temp-claude.md
            mv temp-claude.md external-docs/app-portal/claude.md
          fi

          # Add custom_edit_url to all docs/* files
          find external-docs/app-portal -name "*.md" ! -name "index.md" ! -name "claude.md" -type f | while read file; do
            relpath=${file#external-docs/app-portal/}
            echo "---" > temp.md
            echo "custom_edit_url: https://github.com/open-service-portal/app-portal/edit/main/docs/$relpath" >> temp.md
            echo "---" >> temp.md
            echo "" >> temp.md
            cat "$file" >> temp.md
            mv temp.md "$file"
          done

          rm -rf temp-app-portal

      - name: Clone and copy catalog docs
        run: |
          git clone https://github.com/open-service-portal/catalog.git temp-catalog
          if [ -d "temp-catalog/docs" ]; then
            cp -r temp-catalog/docs/* external-docs/catalog/ 2>/dev/null || true
          fi
          if [ -f "temp-catalog/README.md" ]; then
            cp temp-catalog/README.md external-docs/catalog/index.md
          else
            echo "# Catalog" > external-docs/catalog/index.md
            echo "Template catalog documentation." >> external-docs/catalog/index.md
          fi

          # Add custom_edit_url to index.md (README.md)
          if [ -f "external-docs/catalog/index.md" ]; then
            echo "---" > temp-index.md
            echo "custom_edit_url: https://github.com/open-service-portal/catalog/edit/main/README.md" >> temp-index.md
            echo "---" >> temp-index.md
            echo "" >> temp-index.md
            cat external-docs/catalog/index.md >> temp-index.md
            mv temp-index.md external-docs/catalog/index.md
          fi

          # Add custom_edit_url to all docs/* files
          find external-docs/catalog -name "*.md" ! -name "index.md" -type f | while read file; do
            relpath=${file#external-docs/catalog/}
            echo "---" > temp.md
            echo "custom_edit_url: https://github.com/open-service-portal/catalog/edit/main/docs/$relpath" >> temp.md
            echo "---" >> temp.md
            echo "" >> temp.md
            cat "$file" >> temp.md
            mv temp.md "$file"
          done

          rm -rf temp-catalog

      - name: Collect template documentation
        run: |
          # Dynamically discover all template repositories
          echo "Discovering template repositories..."
          gh api orgs/open-service-portal/repos --paginate --jq '.[] | select(.name | startswith("template-") or endswith("-template")) | .name' > template-repos.txt

          # Create overview index page
          echo "# Templates Documentation" > external-docs/templates/index.md
          echo "" >> external-docs/templates/index.md
          echo "Browse all available templates in the sidebar or jump directly to their source documentation." >> external-docs/templates/index.md
          echo "" >> external-docs/templates/index.md
          echo "## Crossplane Templates" >> external-docs/templates/index.md
          echo "" >> external-docs/templates/index.md
          echo "| Template | Source |" >> external-docs/templates/index.md
          echo "|----------|--------|" >> external-docs/templates/index.md

          # Process each template as separate page
          while IFS= read -r repo; do
            echo "Processing $repo..."
            git clone --depth 1 https://github.com/open-service-portal/$repo.git temp-$repo 2>/dev/null || continue

            if [ -f "temp-$repo/README.md" ]; then
              # Add frontmatter with edit URL
              echo "---" > external-docs/templates/$repo.md
              echo "custom_edit_url: https://github.com/open-service-portal/$repo/edit/main/README.md" >> external-docs/templates/$repo.md
              echo "---" >> external-docs/templates/$repo.md
              echo "" >> external-docs/templates/$repo.md
              cat temp-$repo/README.md >> external-docs/templates/$repo.md

              # Add to index with link
              if [[ $repo == template-* ]]; then
                echo "| [\`$repo\`](./$repo.md) | https://github.com/open-service-portal/$repo/blob/main/README.md |" >> external-docs/templates/index.md
              fi
            fi

            rm -rf temp-$repo
          done < template-repos.txt

          echo "" >> external-docs/templates/index.md
          echo "## Backstage Service Templates" >> external-docs/templates/index.md
          echo "" >> external-docs/templates/index.md
          echo "| Template | Source |" >> external-docs/templates/index.md
          echo "|----------|--------|" >> external-docs/templates/index.md

          # Add service templates to index
          while IFS= read -r repo; do
            if [[ $repo == service-*-template ]]; then
              if [ -f "external-docs/templates/$repo.md" ]; then
                echo "| [\`$repo\`](./$repo.md) | https://github.com/open-service-portal/$repo/blob/main/README.md |" >> external-docs/templates/index.md
              fi
            fi
          done < template-repos.txt

          rm template-repos.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: collect-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4